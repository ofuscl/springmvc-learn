package learn.file.io;

import util.JsonUtil;

import java.io.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

/**
 * Created by yunfan on 2018/5/8.
 */
public class FileReaderTest {

    public static void main(String[] args) throws Exception{

        File fromFile = new File("F:\\\\test\\\\zhaoyin.tx");
//        File fromFile = new File("F:\\autoGenerated\\serviceImpl\\temp");

//        fromFile.delete();
//        copyFile(toFile,fromFile);

        new FileReaderTest().zhaoyin();

    }

    /**
     * try with resources 处理文件流关闭操作
     */
    private void zhaoyin(){

        String tempTo;
        List<ResVo> resVos = new ArrayList<>();
        try (BufferedReader fr = new BufferedReader(new FileReader("F:\\test\\zhaoyin.txt"))){
            while((tempTo = fr.readLine())!=null){
                resVos.add(JsonUtil.toBeanFromStr(tempTo.split("\t")[2],ResVo.class));
            }

            resVos.forEach(resVo ->{
                System.out.println(JsonUtil.toJsonFromObject(resVo));
            });

        }catch (IOException e){
            System.out.println(e);
        }
    }

    private void testFileReaderWriter(){

        FileReader fr = null;
        FileWriter fw = null;
        try{
            fr = new FileReader("F:/tmp/ktgg1.txt");
            fw = new FileWriter("F:/tmp/fileWriter.txt");
            int ch = 0;
            char []  buf = new char[1024];
            while ((ch=fr.read(buf)) != -1){
                System.out.println(buf.length);
                fw.write(new String(buf,1,ch));
            }

            for(char bu : buf){
                System.out.println(bu);
            }

        }catch (IOException e){
            System.out.println(e);
        }finally {
            if(fr != null){
                try{
                    fr.close();
                }catch (IOException e){
                    System.out.println(e);
                }
            }
            if(fw != null){
                try{
                    fw.close();
                }catch (IOException e){
                    System.out.println(e);
                }
            }
        }
    }


    /**
     * try with resources 处理文件流关闭操作
     */
    private void testFileReaderWriterNew(){

        try (FileReader fr = new FileReader("F:/tmp/ktgg1.txt"); FileWriter fw = new FileWriter("F:/tmp/fileWriter.txt")){
            int ch = 0;
            char []  buf = new char[1024];
            while ((ch=fr.read(buf)) != -1){
                System.out.println(buf.length);
                fw.write(new String(buf,1,ch));
            }

            for(char bu : buf){
                System.out.println(bu);
            }

        }catch (IOException e){
            System.out.println(e);
        }
    }

    private static void copyFile(File toFile, File fromFile) throws Exception{
        BufferedReader readTo = null;
        BufferedReader readFrom = null;
        FileWriter write = null;
        String tempTo;
        String tempFrom;
        try {
            readTo = new BufferedReader(new FileReader(toFile));
            List<String> xList = new LinkedList<>();

            while((tempTo = readTo.readLine())!=null){
                xList.add(tempTo);
            }

            write = new FileWriter(toFile, false);
            for (int i=0; i < xList.size()-1;i++){
                write.write(xList.get(i)+"\r\n");
            }
            write.write("\r\n");

            readFrom = new BufferedReader(new FileReader(fromFile));
            while((tempFrom = readFrom.readLine())!=null){
                write.write(tempFrom+"\r\n");
            }

            write.write("}\r\n");

            System.out.println("---- 插入完毕 ----");
            write.close();
            readTo.close();
            readFrom.close();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (write != null){
                write.close();
            }
            if (readTo != null){
                readTo.close();
            }
            if (readFrom != null){
                readFrom.close();
            }
        }
    }
}
